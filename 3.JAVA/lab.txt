/// lab-1
// 1.1: Stewie
public class Stewie  {
	public static void main(String[] args) {
        System.out.println("//////////////////////");
        System.out.println("|| Victory is mine! ||");
        System.out.println("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");
    }
}

// 1.2: Spikey
public class Spikey {
    public static void main(String[] args) {
        System.out.println("  \\/\n \\\\//\n\\\\\\///\n///\\\\\\\n //\\\\\n  /\\");
    }
}

// 1.3: WellFormed
public class WellFormed {
    public static void main(String[] args) {
        System.out.println("A well-formed Java program has");
        System.out.println("a main method with { and }");
        System.out.println("braces.");
        System.out.println("");
        System.out.println("A System.out.println statement");
        System.out.println("has ( and ) and usually a");
        System.out.println("String that starts and ends");
        System.out.println("with a \" character.");
        System.out.println("(But we type \\\" instead!)");
    }
}

// 1.4: Difference
public class Difference {
    public static void main(String arg[]) {
        System.out.print(
                "What is the difference between\na ' and a \"?  Or between a \" and a \\\"?\n\nOne is what we see when we're typing our program.\nThe other is what appears on the \"console.\"");
    }
}

// 1.5: MuchBetter
public class MuchBetter {
    public static void main(String arg[]) {
        System.out.print(
                "A \"quoted\" String is\n'much' better if you learn\nthe rules of \"escape sequences.\"\nAlso, \"\" represents an empty String.\nDon't forget: use \\\" instead of \" !\n'' is not the same as \"");
    }
}

// 1.6: Meta
public class Meta {
    public static void main(String[] args) {
        System.out.print(
                "public class Hello {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, world!\");\n    }\n}");
    }
}

// 1.7: Mantra
public class Mantra {
    public static void main(String[] args) {
        add();
        System.out.println();
        add();
    }

    public static void add() {
        System.out.println(
                "There's one thing every coder must understand:\nThe System.out.println command.");
    }
}

// 1.8: Stewie2
public class Stewie2 {
    public static void main(String[] args) {
        System.out.println("//////////////////////");
        for (int i = 0; i < 5; i++) {
            add();
        }
    }
    public static void add() {
        System.out.println("|| Victory is mine! ||");
        System.out.println("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");
    }
}

// 1.9: Egg 
public class Egg {
    public static void main(String[] args) {
        System.out.println("  _______\n /       \\\n/         \\\n-\"-\'-\"-\'-\"-\n\\         /\n \\_______/");
    } 
}

//  1.10: Egg2
public class Egg2 {
    public static void main(String[] args) {
        top();
        bot();
        mid();
        top();
        bot();
        mid();
        bot();
        top();
        mid();
        bot();
    }
    public static void top() {
        System.out.println("  _______\n /       \\\n/         \\");
    }
    public static void bot() {
        System.out.println("\\         /\n \\_______/");
    }
    public static void mid() {
        System.out.println("-\"-'-\"-'-\"-");
    }
}

//  1.11: TwoRockets
public class TwoRockets {
    public static void main(String[] args) {
        top();
        mid1();
        mid2();
        mid1();
        top();
    }
    public static void top() {
        System.out.println("   /\\       /\\\n  /  \\     /  \\\n /    \\   /    \\");
    }
    public static void mid1() {
        System.out.println("+------+ +------+\n|      | |      |\n|      | |      |\n+------+ +------+");
    }
    public static void mid2() {
        System.out.println("|United| |United|\n|States| |States|");
    }
    
}

// 1.12: FightSong
public class FightSong {
    public static void main(String[] args) {
        go();
        System.out.println();
        goYougo();
        System.out.println();
        goYougo();
        System.out.println();
        go();
    }
    public static void go() {
        System.out.println("Go, team, go!\nYou can do it.");
    }
    public static void you() {
        System.out.println("You're the best,\nIn the West.");
    }
    public static void goYougo() {
                go();
                you();
        go();
    }
}

// 1.13: StarFigures
public class StarFigures {
    public static void main(String[] args) {
        twoLine();
        x();
        System.out.println();
        twoLine();
        x();
        twoLine();
        System.out.println();
        i();
        twoLine();
        x();
    }
    public static void twoLine() {
        System.out.println("*****\n*****");
    }
    public static void x() {
        System.out.println(" * *\n  *\n * *");
    }
    public static void i() {
        System.out.println("  *\n  *\n  *");
    }
}

// 1.14: Lanterns
public class Lanterns {
    public static void main(String[] args) {

        System.out.println("    *****\n  *********\n*************\n\n    *****\n  *********\n*************\n* | | | | | *\n*************\n    *****\n  *********\n*************\n\n    *****\n  *********\n*************\n    *****\n* | | | | | *\n* | | | | | *\n    *****\n    *****\n");

    }
}

// 1.15: EggStop
public class EggStop {
    public static void main(String[] args) {
        System.out.println("  ______\n /      \\\n/        \\\n\\        /\n \\______/\n\n  ______\n /      \\\n/        \\\n\\        /\n \\______/\n+--------+\n\n  ______\n /      \\\n/        \\\n|  STOP  |\n\\        /\n \\______/\n+--------+\n\n");
    }
}

// 1.16: Shining
public class Shining {
    public static void main(String[] args) {
        for (int i = 0; i < 1000; i++) {
            txt();
        }
    }
    public static void txt(){
        System.out.println("All work and no play makes Jack a dull boy.");
    }
}


/// lab-3
// 4.4: daysInMonth
public class lab {
    public static void main(String[] args) {
            System.out.print(daysInMonth(9));
        } 
    public static int daysInMonth(int month){
        if (month == 1 || month == 3 || month == 5 || month == 7 ||month == 8 || month == 10 || month == 12){
            return 31;
        }
        else if (month == 2) {
            return 28;
        } else {
             return 30;
        }
    }
}

// 4.13: colors
import java.util.Scanner;

public class lab {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("What color do you want? ");
        String color = input.nextLine();
        if (color.toUpperCase().equals("R")) {
            System.out.println("You have chosen Red.");
        } else if (color.toUpperCase().equals("G")) {
            System.out.println("You have chosen Green.");
        } else if (color.toUpperCase().equals("B")) {
            System.out.println("You have chosen Blue.");
        } else {
            System.out.println("Unknown color: " + color);
        }
    }
}


// 4.7: evenOdd
import java.util.Scanner;

public class lab {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Type a number: ");
        int number = input.nextInt();
        if (number % 2 == 0) {
            System.out.println("even");
        } else {
            System.out.println("odd");
        }
    }
}

// 4.15: getGrade
import java.util.Scanner;

public class lab {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Score: ");
        int score = input.nextInt();
        System.out.println("Grade: " + getGrade(score));
        input.close();
    }

    public static double getGrade(int score) {
        double grade = 0.8;
        if (score < 0 || score > 100) {
            throw new IllegalArgumentException();
        }
        if (score < 60) {
            grade = 0.0;
        } else if (score <= 62) {
            grade = 0.7;
        } else if (score >= 95) {
            grade = 4.0;
        } else {
            for (int i = 63; i < score; i++) {
                grade += 0.1;
            }
        }
        return grade;
    }
}

// 4.16: printPalindrome
import java.util.Scanner;

public class lab {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        printPalindrome(input);
        input.close();
    }

    public static void printPalindrome(Scanner input) {
        System.out.print("Type one or more words: ");
        String text = input.nextLine();
        if (text.toUpperCase().equals(new StringBuilder(text).reverse().toString().toUpperCase())) {
            System.out.print(text + " is a palindrome!");
        } else {
            System.out.print(text + " is not a palindrome.");
        }
    }
}

// 4.19: quadrant
import java.util.Scanner;

public class lab {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("x: ");
        double x = input.nextDouble();
        System.out.print("y: ");
        double y = input.nextDouble();
        System.out.println("Quadrant: " + quadrant(x, y));
        input.close();
    }

    public static int quadrant(double x, double y) {
        int quadrant = 0;
        if (!(x == 0 || y == 0)) {
            if (x * y > 0) {
                if (x > 0) {
                    quadrant = 1;
                } else {
                    quadrant = 3;
                }
            } else {
                if (x < 0) {
                    quadrant = 2;
                } else {
                    quadrant = 4;
                }
            }
        }
        return quadrant;
    }
}

// 4.20: numUnique
import java.util.Scanner;

public class lab {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("x: ");
        double x = input.nextDouble();
        System.out.print("y: ");
        double y = input.nextDouble();
        System.out.print("z: ");
        double z = input.nextDouble();
        System.out.println("Unique: " + numUnique(x, y, z));
        input.close();
    }

    public static int numUnique(double x, double y, double z) {
        int number = 3;
        if (x - y == 0) {
            number -= 1;
        }
        if (x - z == 0) {
            number -= 1;
        }
        if (y - z == 0) {
            number -= 1;
        }
        if (x == y && x == z) {
            number += 1;
        }
        return number;
    }
}

/// lab-4
//2.1: displacement
double s0 = 12.0;
double v0 = 3.5;
double a = 9.8;
double t = 10;

double s = s0 + v0 * t + 0.5 * a * Math.pow(t,2);
System.out.print(s);

//2.2: loopSquares
for(int i = 1; i<=10; i++){
    System.out.print((int) Math.pow(i,2)+" ");
}

// 2.3: fibonacci
public class lab {
    public static void main(String[] args) {
        int x1 = 0;
        int x2 = 1;
        int x = x1 + x2;
        for (int i = 0; i < 12; i++) {
            System.out.print(x + " ");
            // System.out.println("x:" + x + " x1:" + x1 + " " + "x2:" + x2);
            x = x1 + x2;
            x1 = x2;
            x2 = x;
        }
    }
}

// 2.4: starSquare
for (int i=0;i<4;i++){
 for (int j=0;j<5;j++){
     System.out.print("*");
 }
    System.out.print("\n");
}

// 2.5: starTriangle
for (int i=0;i<5;i++){
 for (int j=0;j<=i;j++){
     System.out.print("*");
 }
    System.out.print("\n");
}

// 2.6: numberTriangle
for (int i=1;i<=7;i++){
 for (int j=1;j<=i;j++){
     System.out.print(i);
 }
    System.out.print("\n");
}

// 2.7: spacedNumbers
for (int i=1;i<=5;i++){
 for (int j=5;j>i;j--){
     System.out.print(" ");
 }
    System.out.print(i+"\n");
}

// 2.8: spacesAndNumbers
for (int i=1;i<=5;i++){
 for (int j=4;j>=i;j--){
     System.out.print(" ");
 }
 for (int j=1;j<=i;j++){
     System.out.print(i);
 }  
    System.out.print("\n");
}

// 2.9: waveNumbers40
for (int i=1;i<=40;i++){
     System.out.print("-");
}
System.out.print("\n");
for (int j=1;j<=10;j++){
     System.out.print("_-^-");
}
System.out.print("\n");
for (int j = 1;j<=2;j++){
    for (int i=1;i<=9;i++){
         System.out.print(i+""+i);
    }
    System.out.print("00");
}
System.out.print("\n");
for (int i=1;i<=40;i++){
     System.out.print("-");
}

// 2.10: numbersOutput60
for (int i=1;i<=6;i++){
     System.out.print("         |");
}
System.out.print("\n");
for (int j=1;j<=6;j++){
     for (int i = 1;i<=10;i++){
         System.out.print(i%10);
     }
}